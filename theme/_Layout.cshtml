<!DOCTYPE html>
<html>
    <head>
        @{
          var title = @Model.WithoutSettings.String(BlogKeys.Title);
          if (string.IsNullOrEmpty(title)) {
              title = "KWBlog"; // I should be able to get this from the wyam.config global settings, but I can't figure out how!
          }
          else {
              title = "KWBlog: " + title;
          }
        }
        <title>@(title)</title>
        <link rel="stylesheet" href="https://unpkg.com/purecss@1.0.0/build/pure-min.css" integrity="sha384-nn4HPE8lTHyVtfCBi5yW9d20FjT8BJwUXyWZT9InLYax14RDjBj46LmSztkmNP9w" crossorigin="anonymous">
        <!--[if lte IE 8]>
            <link rel="stylesheet" href="https://unpkg.com/purecss@1.0.0/build/grids-responsive-old-ie-min.css">
        <![endif]-->
        <!--[if gt IE 8]><!-->
            <link rel="stylesheet" href="https://unpkg.com/purecss@1.0.0/build/grids-responsive-min.css">
        <!--<![endif]-->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        
        <link href="@Context.GetLink("/assets/css/site.css")" rel="stylesheet" />
        <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">

        @if (Context.String(BlogKeys.RssPath) != null) {
            <link type="application/rss+xml" rel="alternate" title="@(Context.String(BlogKeys.Title)) (rss)" href="@Context.GetLink(Context.String(BlogKeys.RssPath))" />
        }
        @if (Context.String(BlogKeys.AtomPath) != null) {
            <link type="application/atom+xml" rel="alternate" title="@(Context.String(BlogKeys.Title)) (atom)" href="@Context.GetLink(Context.String(BlogKeys.AtomPath))" />
        }
    </head>
    <body>
        <header class="header">
            @{
                List<Tuple<string, string>> pages = Context
                    .Documents[Blog.Pages]
                    .Where(x => x.Bool(BlogKeys.ShowInNavbar, true))
                    .Where(x => x.FilePath(Keys.RelativeFilePath)?.FullPath?.StartsWith("index") == (bool?)false)
                    .Select(x => Tuple.Create(x.WithoutSettings.String(Keys.Title), Context.GetLink(x)))
                    .Where(x => !string.IsNullOrEmpty(x.Item1))
                    .OrderBy(x => x.Item1)
                    .ToList();
                if(Documents[Blog.Tags].Any())
                {
                    pages.Insert(0, Tuple.Create("Tags", Context.GetLink("tags/index.html")));
                }
                if(Documents[Blog.BlogPosts].Any() && Context.Bool(BlogKeys.GenerateArchive))
                {
                    pages.Insert(0, Tuple.Create("Archive", Context.GetLink(Context.String(BlogKeys.PostsPath) + "/index.html")));
                }
            }
            <div class="pure-menu pure-menu-horizontal">
                <h1><a class="pure-menu-heading" href="@Context.GetLink("/")">@Context.String(BlogKeys.Description)</a></h1>
                <ul class="pure-menu-list">
                    @foreach(Tuple<string, string> page in pages)
                    {
                        <li class="pure-menu-item"><a href="@page.Item2" class="pure-menu-link">@page.Item1</a></li>
                    }
                </ul>
            </div>
        </header>

        @RenderBody()

    </body>
</html>

